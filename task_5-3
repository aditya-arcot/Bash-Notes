#!/usr/bin/env bash

# recursive ls with hierarchy structure

# options
# -d#
# 	depth
# 	default - 3
# 	must be positive int
# -h
# 	show 

verticalbar="|"
tab="\t"
IFS=";"
hidden=false

main ()
{
	process_options "$@"
	shift $((OPTIND-1))
	initialize

	if [ -z "$*" ]; then
		traverse_paths "."
	else
		traverse_paths "$@"
	fi
}

process_options ()
{
	while getopts ":d:h" option; do
		case $option in
			# depth
			d )
				# check for positive integer
				if ! [[ "$OPTARG" =~ ^[1-9][0-9]*$ ]]; then 
					echo "Invalid depth argument ($OPTARG). Depth must be a positive integer."
					show_help
					return 1
				fi
				depth=$OPTARG
				echo "Specified depth: $depth"
				;;
			
			# hidden
			h )
				echo "Showing hidden files / folders"
				hidden=true
				;;
			
			# invalid
			\? ) 
				echo "Invalid option: -$OPTARG"
				show_help
				return 1
				;;
		esac
	done
}

show_help ()
{
	echo "Usage: recls [-d depth] [-h]"
	echo "Options:"
	echo "  -d depth: Specify the depth of recursion (default: 3)"
	echo "  -h: Show hidden files and directories"
}

initialize ()
{
	if [ -z "$depth" ]; then
		depth=3
		echo "Default depth: 3"
	fi

	for ((i=0; i<depth; i++)); do
		maxtab+="$verticalbar$tab"
	done
}

traverse_paths ()
{
	for arg
	do
		if [ ! -e "$arg" ] # does not exist
		then
			echo "not a valid file or directory ($arg)"

		elif [ "$arg" = "." ] # current dir
		then
			echo "$(ls --color=always -d)/"
			if [ -r "$arg" ]; then
				curr=$PWD
				explore_directory
			fi
		
		elif [ -d "$arg" ] || [ -L "$arg" ] # another dir
		then
			echo "$(ls --color=always -d "$arg")/"
			if [ -r "$arg" ]; then
				cd "$arg" || exit
				curr=$PWD
				cd "-" > /dev/null || exit
				explore_directory
			fi
		
		else # file
			echo "$arg"
		fi
		echo
	done
}

explore_directory ()
{
	# empty dir
	if [[ $(find -L "$curr" -maxdepth 1 -mindepth 1 2>/dev/null | wc -l) -eq 0 ]]
	then
		return
	fi

	indent=$indent$verticalbar$tab

	# max depth
	if [ "$indent" = "$maxtab" ]; then
		indent=${indent%"$verticalbar$tab"}
		echo -en "$indent$verticalbar"
		echo -e "\t"...
		return
	fi

	pushd "$curr" > /dev/null || exit

	# including hidden files
	if [ "$hidden" = true ]; then
		for file in $(stat -n -f '%N;' -- * .* 2>/dev/null); do
			if [ $file != '.' ] && [ $file != '..' ]; then
				display_entry_info
			fi
		done
	else
		for file in $(stat -n -f '%N;' -- * 2>/dev/null); do
			display_entry_info
		done
	fi

	popd > /dev/null || exit
	indent=${indent%"$verticalbar$tab"}
}

display_entry_info ()
{
	echo -en "$indent"
	echo -n "$(ls --color=always -d "$file")"

	# dir
	if [ -d "$file" ] ||  [ -L "$file" ]; then
		echo /
		curr="$curr/$file"
		explore_directory
		curr="${curr%/*}"
	# file
	else
		echo
	fi
}

main "$@"